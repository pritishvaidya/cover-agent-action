name: 'Coverage Check'
description: 'Runs coverage check with specified parameters and generates a pull request with test results'

inputs:
  test-command:
    description: 'Command to run tests'
    required: true
  coverage-type:
    description: 'Type of coverage report'
    required: true
  desired-coverage:
    description: 'Desired coverage percentage'
    required: true
  max-iterations:
    description: 'Maximum number of iterations'
    required: true
  open-api-key:
    description: 'API key for the coverage tool'
    required: false
  github-token:
    description: 'GitHub token for authentication'
    required: true
  pr-github-token:
    description: 'GitHub token for creating PR and commenting'
    required: true
  python-version:
    description: 'Python version to install'
    required: true
    default: '3.12'
  node-version:
    description: 'Node.js version to install'
    required: true
    default: '20.3.1'

outputs:
  previousCoverage:
    description: "Previous coverage"
    value: ${{ steps.coverageBefore.outputs.coverage }}
  currentCoverage:
    description: "Current coverage"
    value: ${{ steps.coverageAfter.outputs.coverage }}

runs:
  using: 'composite'
  steps:
    - name: Checkout Codebase
      uses: actions/checkout@v3
      with:
        fetch-depth: 3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install Node.js dependencies
      shell: sh
      run: npm install

    - name: Set environment variable for Git SHA
      shell: sh
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python-version }}

    - name: Cache Poetry dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pypoetry
          ~/.cache/pip
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install Cover-Agent
      shell: sh
      run: pip install git+https://github.com/Codium-ai/cover-agent.git

    - name: Run Cover Agent Action
      uses: pritishvaidya/cover-agent-action/.github/cover-agent-ci@master
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        PR_GITHUB_TOKEN: ${{ inputs.pr-github-token }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_REF: ${{ github.ref }}

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ./test-results

    - name: Upload initial coverage report
      uses: actions/upload-artifact@v3
      with:
        name: initial-coverage
        path: ./coverage/initial-coverage.xml

    - name: Upload updated coverage report
      uses: actions/upload-artifact@v3
      with:
        name: updated-coverage
        path: ./coverage/updated-coverage.xml
