# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: Jest Coverage Commenter
description: Comment on PRs with Jest Coverage Information
inputs:
  github_token:
    description: A GitHub Token, the standard one is great
    required: true
  repo_name:
    description: A GitHub Repository name
    required: true
  openai_api_key:
    description: An OpenAI API Key
    required: true
  max_iterations:
    description: 'Max Iterations'
    default: '2'
    required: false
  test_command:
    description: The test command to run, that also runs coverage appropriately
    default: npx jest --coverage
    required: false
  reporter:
    description: "Possible types: text, text-summary. Set your --coverageReporters to match."
    default: text
    required: false
  comment_prefix:
    description: A message desired to be shown before the code coverage report
    default: "## Jest Coverage"
    required: false
branding:
  icon: percent
  color: orange
runs:
  using: composite
  steps:
    - name: Checkout target repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: ${{ inputs.repo_name }}
        token: ${{ inputs.github_token }}
        path: .

    - name: Set environment variable for Git SHA
      shell: sh
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python-version }}

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          ~/.cache/pip
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install Cover-Agent
      shell: sh
      run: pip install git+https://github.com/Codium-ai/cover-agent.git

    - name: Run cover-agent-ci
      id: cover-agent-ci-action
      uses: pritishvaidya/cover-agent-action/src@cover-agent-jest
      env:
        AZURE_API_KEY: ${{ inputs.API_KEY }}
        AZURE_API_BASE: 'https://hackonfy25.openai.azure.com'
        AZURE_API_VERSION: '2024-02-15-preview'
      with:
        openai_api_key: ${{ inputs.openai_api_key }}
        test_command: ${{ inputs.test_command }}
        max_iterations: ${{ inputs.max_iterations }}
        github_token: ${{ inputs.github_token }}

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ${{ github.workspace }}/*.html

    - name: Remove files
      shell: bash
      run: |
        rm -f run.log test_results_*.html coverage.xml
        git diff

#    - name: Create PR with changes
#      id: create-pr
#      uses: peter-evans/create-pull-request@v6
#      with:
#        branch: "testgen/${{ github.head_ref || github.ref_name }}"
#        base: ${{ github.head_ref || github.ref_name }}
#        commit-message: Add generated tests
#        title: "Generated test for PR #${{ github.event.number }}"
#        token: ${{ inputs.github_token }}
#        draft: true

#    - name: Comment coverage summary on PR
#      if: ${{ steps.create-pr.outputs.pull-request-number }}
#      uses: actions/github-script@v7
#      with:
#        github-token: ${{ inputs.github_token }}
#        script: |
#          const fs = require('fs');
#          const coverageBefore = "${{ steps.coverageBefore.outputs.coverage }}".trim();
#          const coverageAfter = "${{ steps.coverageAfter.outputs.coverage }}".trim();
#          const comment = `### Find the PR with generated test #${{steps.create-pr.outputs.pull-request-number}}`;
#          github.rest.issues.createComment({
#            issue_number: context.issue.number,
#            owner: context.repo.owner,
#            repo: context.repo.repo,
#            body: comment
#          });

